// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: helloworld.proto

#ifndef PROTOBUF_helloworld_2eproto__INCLUDED
#define PROTOBUF_helloworld_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_helloworld_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsHelloRequestImpl();
void InitDefaultsHelloRequest();
void InitDefaultsHelloReplyImpl();
void InitDefaultsHelloReply();
void InitDefaultsLocUpdtReqImpl();
void InitDefaultsLocUpdtReq();
void InitDefaultsLocUpdtRepImpl();
void InitDefaultsLocUpdtRep();
inline void InitDefaults() {
  InitDefaultsHelloRequest();
  InitDefaultsHelloReply();
  InitDefaultsLocUpdtReq();
  InitDefaultsLocUpdtRep();
}
}  // namespace protobuf_helloworld_2eproto
namespace helloworld {
class HelloReply;
class HelloReplyDefaultTypeInternal;
extern HelloReplyDefaultTypeInternal _HelloReply_default_instance_;
class HelloRequest;
class HelloRequestDefaultTypeInternal;
extern HelloRequestDefaultTypeInternal _HelloRequest_default_instance_;
class LocUpdtRep;
class LocUpdtRepDefaultTypeInternal;
extern LocUpdtRepDefaultTypeInternal _LocUpdtRep_default_instance_;
class LocUpdtReq;
class LocUpdtReqDefaultTypeInternal;
extern LocUpdtReqDefaultTypeInternal _LocUpdtReq_default_instance_;
}  // namespace helloworld
namespace helloworld {

// ===================================================================

class HelloRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:helloworld.HelloRequest) */ {
 public:
  HelloRequest();
  virtual ~HelloRequest();

  HelloRequest(const HelloRequest& from);

  inline HelloRequest& operator=(const HelloRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HelloRequest(HelloRequest&& from) noexcept
    : HelloRequest() {
    *this = ::std::move(from);
  }

  inline HelloRequest& operator=(HelloRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HelloRequest* internal_default_instance() {
    return reinterpret_cast<const HelloRequest*>(
               &_HelloRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(HelloRequest* other);
  friend void swap(HelloRequest& a, HelloRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HelloRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  HelloRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HelloRequest& from);
  void MergeFrom(const HelloRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HelloRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // int64 imsi = 3;
  void clear_imsi();
  static const int kImsiFieldNumber = 3;
  ::google::protobuf::int64 imsi() const;
  void set_imsi(::google::protobuf::int64 value);

  // int64 plmn_id = 4;
  void clear_plmn_id();
  static const int kPlmnIdFieldNumber = 4;
  ::google::protobuf::int64 plmn_id() const;
  void set_plmn_id(::google::protobuf::int64 value);

  // int64 num_autn_vec = 5;
  void clear_num_autn_vec();
  static const int kNumAutnVecFieldNumber = 5;
  ::google::protobuf::int64 num_autn_vec() const;
  void set_num_autn_vec(::google::protobuf::int64 value);

  // int64 nw_type = 6;
  void clear_nw_type();
  static const int kNwTypeFieldNumber = 6;
  ::google::protobuf::int64 nw_type() const;
  void set_nw_type(::google::protobuf::int64 value);

  // int64 msg_type = 7;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 7;
  ::google::protobuf::int64 msg_type() const;
  void set_msg_type(::google::protobuf::int64 value);

  // int64 mmei = 8;
  void clear_mmei();
  static const int kMmeiFieldNumber = 8;
  ::google::protobuf::int64 mmei() const;
  void set_mmei(::google::protobuf::int64 value);

  // int32 num = 9;
  void clear_num();
  static const int kNumFieldNumber = 9;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:helloworld.HelloRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::int64 imsi_;
  ::google::protobuf::int64 plmn_id_;
  ::google::protobuf::int64 num_autn_vec_;
  ::google::protobuf::int64 nw_type_;
  ::google::protobuf::int64 msg_type_;
  ::google::protobuf::int64 mmei_;
  ::google::protobuf::int32 num_;
  mutable int _cached_size_;
  friend struct ::protobuf_helloworld_2eproto::TableStruct;
  friend void ::protobuf_helloworld_2eproto::InitDefaultsHelloRequestImpl();
};
// -------------------------------------------------------------------

class HelloReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:helloworld.HelloReply) */ {
 public:
  HelloReply();
  virtual ~HelloReply();

  HelloReply(const HelloReply& from);

  inline HelloReply& operator=(const HelloReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HelloReply(HelloReply&& from) noexcept
    : HelloReply() {
    *this = ::std::move(from);
  }

  inline HelloReply& operator=(HelloReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HelloReply* internal_default_instance() {
    return reinterpret_cast<const HelloReply*>(
               &_HelloReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(HelloReply* other);
  friend void swap(HelloReply& a, HelloReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HelloReply* New() const PROTOBUF_FINAL { return New(NULL); }

  HelloReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HelloReply& from);
  void MergeFrom(const HelloReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HelloReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int64 autn_num = 2;
  void clear_autn_num();
  static const int kAutnNumFieldNumber = 2;
  ::google::protobuf::int64 autn_num() const;
  void set_autn_num(::google::protobuf::int64 value);

  // int64 rand_num = 3;
  void clear_rand_num();
  static const int kRandNumFieldNumber = 3;
  ::google::protobuf::int64 rand_num() const;
  void set_rand_num(::google::protobuf::int64 value);

  // int64 xres = 4;
  void clear_xres();
  static const int kXresFieldNumber = 4;
  ::google::protobuf::int64 xres() const;
  void set_xres(::google::protobuf::int64 value);

  // int64 k_asme = 5;
  void clear_k_asme();
  static const int kKAsmeFieldNumber = 5;
  ::google::protobuf::int64 k_asme() const;
  void set_k_asme(::google::protobuf::int64 value);

  // int64 default_apn = 6;
  void clear_default_apn();
  static const int kDefaultApnFieldNumber = 6;
  ::google::protobuf::int64 default_apn() const;
  void set_default_apn(::google::protobuf::int64 value);

  // int64 msg_type = 7;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 7;
  ::google::protobuf::int64 msg_type() const;
  void set_msg_type(::google::protobuf::int64 value);

  // int32 count = 8;
  void clear_count();
  static const int kCountFieldNumber = 8;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:helloworld.HelloReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int64 autn_num_;
  ::google::protobuf::int64 rand_num_;
  ::google::protobuf::int64 xres_;
  ::google::protobuf::int64 k_asme_;
  ::google::protobuf::int64 default_apn_;
  ::google::protobuf::int64 msg_type_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend struct ::protobuf_helloworld_2eproto::TableStruct;
  friend void ::protobuf_helloworld_2eproto::InitDefaultsHelloReplyImpl();
};
// -------------------------------------------------------------------

class LocUpdtReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:helloworld.LocUpdtReq) */ {
 public:
  LocUpdtReq();
  virtual ~LocUpdtReq();

  LocUpdtReq(const LocUpdtReq& from);

  inline LocUpdtReq& operator=(const LocUpdtReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocUpdtReq(LocUpdtReq&& from) noexcept
    : LocUpdtReq() {
    *this = ::std::move(from);
  }

  inline LocUpdtReq& operator=(LocUpdtReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocUpdtReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocUpdtReq* internal_default_instance() {
    return reinterpret_cast<const LocUpdtReq*>(
               &_LocUpdtReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(LocUpdtReq* other);
  friend void swap(LocUpdtReq& a, LocUpdtReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocUpdtReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LocUpdtReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LocUpdtReq& from);
  void MergeFrom(const LocUpdtReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LocUpdtReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:helloworld.LocUpdtReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_helloworld_2eproto::TableStruct;
  friend void ::protobuf_helloworld_2eproto::InitDefaultsLocUpdtReqImpl();
};
// -------------------------------------------------------------------

class LocUpdtRep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:helloworld.LocUpdtRep) */ {
 public:
  LocUpdtRep();
  virtual ~LocUpdtRep();

  LocUpdtRep(const LocUpdtRep& from);

  inline LocUpdtRep& operator=(const LocUpdtRep& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocUpdtRep(LocUpdtRep&& from) noexcept
    : LocUpdtRep() {
    *this = ::std::move(from);
  }

  inline LocUpdtRep& operator=(LocUpdtRep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocUpdtRep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocUpdtRep* internal_default_instance() {
    return reinterpret_cast<const LocUpdtRep*>(
               &_LocUpdtRep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LocUpdtRep* other);
  friend void swap(LocUpdtRep& a, LocUpdtRep& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocUpdtRep* New() const PROTOBUF_FINAL { return New(NULL); }

  LocUpdtRep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LocUpdtRep& from);
  void MergeFrom(const LocUpdtRep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LocUpdtRep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:helloworld.LocUpdtRep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_helloworld_2eproto::TableStruct;
  friend void ::protobuf_helloworld_2eproto::InitDefaultsLocUpdtRepImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HelloRequest

// string name = 1;
inline void HelloRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloRequest::name() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.name)
  return name_.GetNoArena();
}
inline void HelloRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.HelloRequest.name)
}
#if LANG_CXX11
inline void HelloRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:helloworld.HelloRequest.name)
}
#endif
inline void HelloRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.HelloRequest.name)
}
inline void HelloRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.HelloRequest.name)
}
inline ::std::string* HelloRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.HelloRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloRequest::release_name() {
  // @@protoc_insertion_point(field_release:helloworld.HelloRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloRequest.name)
}

// string type = 2;
inline void HelloRequest::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloRequest::type() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.type)
  return type_.GetNoArena();
}
inline void HelloRequest::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.HelloRequest.type)
}
#if LANG_CXX11
inline void HelloRequest::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:helloworld.HelloRequest.type)
}
#endif
inline void HelloRequest::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.HelloRequest.type)
}
inline void HelloRequest::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.HelloRequest.type)
}
inline ::std::string* HelloRequest::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.HelloRequest.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloRequest::release_type() {
  // @@protoc_insertion_point(field_release:helloworld.HelloRequest.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloRequest::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloRequest.type)
}

// int64 imsi = 3;
inline void HelloRequest::clear_imsi() {
  imsi_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloRequest::imsi() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.imsi)
  return imsi_;
}
inline void HelloRequest::set_imsi(::google::protobuf::int64 value) {
  
  imsi_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloRequest.imsi)
}

// int64 plmn_id = 4;
inline void HelloRequest::clear_plmn_id() {
  plmn_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloRequest::plmn_id() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.plmn_id)
  return plmn_id_;
}
inline void HelloRequest::set_plmn_id(::google::protobuf::int64 value) {
  
  plmn_id_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloRequest.plmn_id)
}

// int64 num_autn_vec = 5;
inline void HelloRequest::clear_num_autn_vec() {
  num_autn_vec_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloRequest::num_autn_vec() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.num_autn_vec)
  return num_autn_vec_;
}
inline void HelloRequest::set_num_autn_vec(::google::protobuf::int64 value) {
  
  num_autn_vec_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloRequest.num_autn_vec)
}

// int64 nw_type = 6;
inline void HelloRequest::clear_nw_type() {
  nw_type_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloRequest::nw_type() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.nw_type)
  return nw_type_;
}
inline void HelloRequest::set_nw_type(::google::protobuf::int64 value) {
  
  nw_type_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloRequest.nw_type)
}

// int64 msg_type = 7;
inline void HelloRequest::clear_msg_type() {
  msg_type_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloRequest::msg_type() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.msg_type)
  return msg_type_;
}
inline void HelloRequest::set_msg_type(::google::protobuf::int64 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloRequest.msg_type)
}

// int64 mmei = 8;
inline void HelloRequest::clear_mmei() {
  mmei_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloRequest::mmei() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.mmei)
  return mmei_;
}
inline void HelloRequest::set_mmei(::google::protobuf::int64 value) {
  
  mmei_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloRequest.mmei)
}

// int32 num = 9;
inline void HelloRequest::clear_num() {
  num_ = 0;
}
inline ::google::protobuf::int32 HelloRequest::num() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.num)
  return num_;
}
inline void HelloRequest::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloRequest.num)
}

// -------------------------------------------------------------------

// HelloReply

// string message = 1;
inline void HelloReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HelloReply::message() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloReply.message)
  return message_.GetNoArena();
}
inline void HelloReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.HelloReply.message)
}
#if LANG_CXX11
inline void HelloReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:helloworld.HelloReply.message)
}
#endif
inline void HelloReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.HelloReply.message)
}
inline void HelloReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.HelloReply.message)
}
inline ::std::string* HelloReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.HelloReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HelloReply::release_message() {
  // @@protoc_insertion_point(field_release:helloworld.HelloReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HelloReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloReply.message)
}

// int64 autn_num = 2;
inline void HelloReply::clear_autn_num() {
  autn_num_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloReply::autn_num() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloReply.autn_num)
  return autn_num_;
}
inline void HelloReply::set_autn_num(::google::protobuf::int64 value) {
  
  autn_num_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloReply.autn_num)
}

// int64 rand_num = 3;
inline void HelloReply::clear_rand_num() {
  rand_num_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloReply::rand_num() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloReply.rand_num)
  return rand_num_;
}
inline void HelloReply::set_rand_num(::google::protobuf::int64 value) {
  
  rand_num_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloReply.rand_num)
}

// int64 xres = 4;
inline void HelloReply::clear_xres() {
  xres_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloReply::xres() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloReply.xres)
  return xres_;
}
inline void HelloReply::set_xres(::google::protobuf::int64 value) {
  
  xres_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloReply.xres)
}

// int64 k_asme = 5;
inline void HelloReply::clear_k_asme() {
  k_asme_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloReply::k_asme() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloReply.k_asme)
  return k_asme_;
}
inline void HelloReply::set_k_asme(::google::protobuf::int64 value) {
  
  k_asme_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloReply.k_asme)
}

// int64 default_apn = 6;
inline void HelloReply::clear_default_apn() {
  default_apn_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloReply::default_apn() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloReply.default_apn)
  return default_apn_;
}
inline void HelloReply::set_default_apn(::google::protobuf::int64 value) {
  
  default_apn_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloReply.default_apn)
}

// int64 msg_type = 7;
inline void HelloReply::clear_msg_type() {
  msg_type_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 HelloReply::msg_type() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloReply.msg_type)
  return msg_type_;
}
inline void HelloReply::set_msg_type(::google::protobuf::int64 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloReply.msg_type)
}

// int32 count = 8;
inline void HelloReply::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 HelloReply::count() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloReply.count)
  return count_;
}
inline void HelloReply::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:helloworld.HelloReply.count)
}

// -------------------------------------------------------------------

// LocUpdtReq

// -------------------------------------------------------------------

// LocUpdtRep

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace helloworld

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_helloworld_2eproto__INCLUDED

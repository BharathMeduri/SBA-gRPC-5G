// Code generated by protoc-gen-go. DO NOT EDIT.
// source: balancer.proto

package grpclb_balancer_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Server struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Tags                 []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Server) Reset()         { *m = Server{} }
func (m *Server) String() string { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()    {}
func (*Server) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ef67bf28e9287a8, []int{0}
}

func (m *Server) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Server.Unmarshal(m, b)
}
func (m *Server) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Server.Marshal(b, m, deterministic)
}
func (m *Server) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Server.Merge(m, src)
}
func (m *Server) XXX_Size() int {
	return xxx_messageInfo_Server.Size(m)
}
func (m *Server) XXX_DiscardUnknown() {
	xxx_messageInfo_Server.DiscardUnknown(m)
}

var xxx_messageInfo_Server proto.InternalMessageInfo

func (m *Server) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Server) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ServersRequest struct {
	Target               string   `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServersRequest) Reset()         { *m = ServersRequest{} }
func (m *ServersRequest) String() string { return proto.CompactTextString(m) }
func (*ServersRequest) ProtoMessage()    {}
func (*ServersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ef67bf28e9287a8, []int{1}
}

func (m *ServersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServersRequest.Unmarshal(m, b)
}
func (m *ServersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServersRequest.Marshal(b, m, deterministic)
}
func (m *ServersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServersRequest.Merge(m, src)
}
func (m *ServersRequest) XXX_Size() int {
	return xxx_messageInfo_ServersRequest.Size(m)
}
func (m *ServersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServersRequest proto.InternalMessageInfo

func (m *ServersRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type ServersResponse struct {
	Servers              *Server  `protobuf:"bytes,1,opt,name=servers,proto3" json:"servers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServersResponse) Reset()         { *m = ServersResponse{} }
func (m *ServersResponse) String() string { return proto.CompactTextString(m) }
func (*ServersResponse) ProtoMessage()    {}
func (*ServersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ef67bf28e9287a8, []int{2}
}

func (m *ServersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServersResponse.Unmarshal(m, b)
}
func (m *ServersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServersResponse.Marshal(b, m, deterministic)
}
func (m *ServersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServersResponse.Merge(m, src)
}
func (m *ServersResponse) XXX_Size() int {
	return xxx_messageInfo_ServersResponse.Size(m)
}
func (m *ServersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServersResponse proto.InternalMessageInfo

func (m *ServersResponse) GetServers() *Server {
	if m != nil {
		return m.Servers
	}
	return nil
}

func init() {
	proto.RegisterType((*Server)(nil), "grpclb.balancer.v1.Server")
	proto.RegisterType((*ServersRequest)(nil), "grpclb.balancer.v1.ServersRequest")
	proto.RegisterType((*ServersResponse)(nil), "grpclb.balancer.v1.ServersResponse")
}

func init() { proto.RegisterFile("balancer.proto", fileDescriptor_4ef67bf28e9287a8) }

var fileDescriptor_4ef67bf28e9287a8 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xc1, 0x6a, 0x84, 0x30,
	0x10, 0x86, 0xb1, 0x2d, 0x8a, 0xd3, 0x62, 0x61, 0x0e, 0x45, 0x3c, 0x49, 0x7a, 0xf1, 0x14, 0xa8,
	0x2d, 0x7d, 0x80, 0xbd, 0xec, 0x65, 0x4f, 0xd9, 0x27, 0x48, 0x74, 0xf0, 0x22, 0xc6, 0xcd, 0x64,
	0x7d, 0xfe, 0x05, 0x13, 0xbd, 0x2c, 0xbb, 0xb7, 0xfc, 0x3f, 0xdf, 0x17, 0x7e, 0x06, 0x0a, 0xa3,
	0x47, 0x3d, 0x75, 0xe4, 0xe4, 0xec, 0xac, 0xb7, 0x88, 0x83, 0x9b, 0xbb, 0xd1, 0xc8, 0xbd, 0x5e,
	0x7e, 0xc4, 0x3f, 0xa4, 0x67, 0x72, 0x0b, 0x39, 0x2c, 0x21, 0xd3, 0x7d, 0xef, 0x88, 0xb9, 0x4c,
	0xea, 0xa4, 0xc9, 0xd5, 0x16, 0x11, 0xe1, 0xcd, 0xeb, 0x81, 0xcb, 0x97, 0xfa, 0xb5, 0xc9, 0xd5,
	0xfa, 0x16, 0x0d, 0x14, 0xc1, 0x63, 0x45, 0x97, 0x2b, 0xb1, 0xc7, 0x2f, 0x48, 0xbd, 0x76, 0x03,
	0xf9, 0xa8, 0xc7, 0x24, 0x8e, 0xf0, 0xb9, 0x93, 0x3c, 0xdb, 0x89, 0x09, 0xff, 0x20, 0xe3, 0x50,
	0xad, 0xec, 0x7b, 0x5b, 0xc9, 0xfb, 0x69, 0x32, 0x58, 0x6a, 0x43, 0x5b, 0x03, 0x1f, 0x27, 0xab,
	0xfb, 0x43, 0x44, 0x50, 0x41, 0x16, 0x3f, 0x46, 0xf1, 0xd8, 0xdf, 0xf6, 0x55, 0xdf, 0x4f, 0x99,
	0xb0, 0xcc, 0xa4, 0xeb, 0xa5, 0x7e, 0x6f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x11, 0x0a, 0x2b,
	0x3b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LoadBalancerClient is the client API for LoadBalancer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoadBalancerClient interface {
	Servers(ctx context.Context, in *ServersRequest, opts ...grpc.CallOption) (*ServersResponse, error)
}

type loadBalancerClient struct {
	cc *grpc.ClientConn
}

func NewLoadBalancerClient(cc *grpc.ClientConn) LoadBalancerClient {
	return &loadBalancerClient{cc}
}

func (c *loadBalancerClient) Servers(ctx context.Context, in *ServersRequest, opts ...grpc.CallOption) (*ServersResponse, error) {
	out := new(ServersResponse)
	err := c.cc.Invoke(ctx, "/grpclb.balancer.v1.LoadBalancer/Servers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoadBalancerServer is the server API for LoadBalancer service.
type LoadBalancerServer interface {
	Servers(context.Context, *ServersRequest) (*ServersResponse, error)
}

func RegisterLoadBalancerServer(s *grpc.Server, srv LoadBalancerServer) {
	s.RegisterService(&_LoadBalancer_serviceDesc, srv)
}

func _LoadBalancer_Servers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancerServer).Servers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpclb.balancer.v1.LoadBalancer/Servers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancerServer).Servers(ctx, req.(*ServersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoadBalancer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpclb.balancer.v1.LoadBalancer",
	HandlerType: (*LoadBalancerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Servers",
			Handler:    _LoadBalancer_Servers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "balancer.proto",
}

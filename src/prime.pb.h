// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prime.proto

#ifndef PROTOBUF_prime_2eproto__INCLUDED
#define PROTOBUF_prime_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_prime_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPrimeRequestImpl();
void InitDefaultsPrimeRequest();
void InitDefaultsPrimeReplyImpl();
void InitDefaultsPrimeReply();
inline void InitDefaults() {
  InitDefaultsPrimeRequest();
  InitDefaultsPrimeReply();
}
}  // namespace protobuf_prime_2eproto
namespace helloworld {
class PrimeReply;
class PrimeReplyDefaultTypeInternal;
extern PrimeReplyDefaultTypeInternal _PrimeReply_default_instance_;
class PrimeRequest;
class PrimeRequestDefaultTypeInternal;
extern PrimeRequestDefaultTypeInternal _PrimeRequest_default_instance_;
}  // namespace helloworld
namespace helloworld {

// ===================================================================

class PrimeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:helloworld.PrimeRequest) */ {
 public:
  PrimeRequest();
  virtual ~PrimeRequest();

  PrimeRequest(const PrimeRequest& from);

  inline PrimeRequest& operator=(const PrimeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PrimeRequest(PrimeRequest&& from) noexcept
    : PrimeRequest() {
    *this = ::std::move(from);
  }

  inline PrimeRequest& operator=(PrimeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrimeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PrimeRequest* internal_default_instance() {
    return reinterpret_cast<const PrimeRequest*>(
               &_PrimeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PrimeRequest* other);
  friend void swap(PrimeRequest& a, PrimeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PrimeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PrimeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PrimeRequest& from);
  void MergeFrom(const PrimeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PrimeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 num = 1;
  void clear_num();
  static const int kNumFieldNumber = 1;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:helloworld.PrimeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 num_;
  mutable int _cached_size_;
  friend struct ::protobuf_prime_2eproto::TableStruct;
  friend void ::protobuf_prime_2eproto::InitDefaultsPrimeRequestImpl();
};
// -------------------------------------------------------------------

class PrimeReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:helloworld.PrimeReply) */ {
 public:
  PrimeReply();
  virtual ~PrimeReply();

  PrimeReply(const PrimeReply& from);

  inline PrimeReply& operator=(const PrimeReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PrimeReply(PrimeReply&& from) noexcept
    : PrimeReply() {
    *this = ::std::move(from);
  }

  inline PrimeReply& operator=(PrimeReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrimeReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PrimeReply* internal_default_instance() {
    return reinterpret_cast<const PrimeReply*>(
               &_PrimeReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PrimeReply* other);
  friend void swap(PrimeReply& a, PrimeReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PrimeReply* New() const PROTOBUF_FINAL { return New(NULL); }

  PrimeReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PrimeReply& from);
  void MergeFrom(const PrimeReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PrimeReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:helloworld.PrimeReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend struct ::protobuf_prime_2eproto::TableStruct;
  friend void ::protobuf_prime_2eproto::InitDefaultsPrimeReplyImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PrimeRequest

// int32 num = 1;
inline void PrimeRequest::clear_num() {
  num_ = 0;
}
inline ::google::protobuf::int32 PrimeRequest::num() const {
  // @@protoc_insertion_point(field_get:helloworld.PrimeRequest.num)
  return num_;
}
inline void PrimeRequest::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:helloworld.PrimeRequest.num)
}

// -------------------------------------------------------------------

// PrimeReply

// int32 count = 1;
inline void PrimeReply::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 PrimeReply::count() const {
  // @@protoc_insertion_point(field_get:helloworld.PrimeReply.count)
  return count_;
}
inline void PrimeReply::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:helloworld.PrimeReply.count)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace helloworld

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_prime_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ngcode.proto

#ifndef PROTOBUF_ngcode_2eproto__INCLUDED
#define PROTOBUF_ngcode_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_ngcode_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAmfAusfRequestImpl();
void InitDefaultsAmfAusfRequest();
void InitDefaultsAmfAusfReplyImpl();
void InitDefaultsAmfAusfReply();
void InitDefaultsAmfSmfRequestImpl();
void InitDefaultsAmfSmfRequest();
void InitDefaultsAmfSmfReplyImpl();
void InitDefaultsAmfSmfReply();
inline void InitDefaults() {
  InitDefaultsAmfAusfRequest();
  InitDefaultsAmfAusfReply();
  InitDefaultsAmfSmfRequest();
  InitDefaultsAmfSmfReply();
}
}  // namespace protobuf_ngcode_2eproto
namespace ngcode {
class AmfAusfReply;
class AmfAusfReplyDefaultTypeInternal;
extern AmfAusfReplyDefaultTypeInternal _AmfAusfReply_default_instance_;
class AmfAusfRequest;
class AmfAusfRequestDefaultTypeInternal;
extern AmfAusfRequestDefaultTypeInternal _AmfAusfRequest_default_instance_;
class AmfSmfReply;
class AmfSmfReplyDefaultTypeInternal;
extern AmfSmfReplyDefaultTypeInternal _AmfSmfReply_default_instance_;
class AmfSmfRequest;
class AmfSmfRequestDefaultTypeInternal;
extern AmfSmfRequestDefaultTypeInternal _AmfSmfRequest_default_instance_;
}  // namespace ngcode
namespace ngcode {

// ===================================================================

class AmfAusfRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ngcode.AmfAusfRequest) */ {
 public:
  AmfAusfRequest();
  virtual ~AmfAusfRequest();

  AmfAusfRequest(const AmfAusfRequest& from);

  inline AmfAusfRequest& operator=(const AmfAusfRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AmfAusfRequest(AmfAusfRequest&& from) noexcept
    : AmfAusfRequest() {
    *this = ::std::move(from);
  }

  inline AmfAusfRequest& operator=(AmfAusfRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AmfAusfRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AmfAusfRequest* internal_default_instance() {
    return reinterpret_cast<const AmfAusfRequest*>(
               &_AmfAusfRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AmfAusfRequest* other);
  friend void swap(AmfAusfRequest& a, AmfAusfRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AmfAusfRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AmfAusfRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AmfAusfRequest& from);
  void MergeFrom(const AmfAusfRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AmfAusfRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // int64 imsi = 3;
  void clear_imsi();
  static const int kImsiFieldNumber = 3;
  ::google::protobuf::int64 imsi() const;
  void set_imsi(::google::protobuf::int64 value);

  // int64 plmn_id = 4;
  void clear_plmn_id();
  static const int kPlmnIdFieldNumber = 4;
  ::google::protobuf::int64 plmn_id() const;
  void set_plmn_id(::google::protobuf::int64 value);

  // int64 num_autn_vec = 5;
  void clear_num_autn_vec();
  static const int kNumAutnVecFieldNumber = 5;
  ::google::protobuf::int64 num_autn_vec() const;
  void set_num_autn_vec(::google::protobuf::int64 value);

  // int64 nw_type = 6;
  void clear_nw_type();
  static const int kNwTypeFieldNumber = 6;
  ::google::protobuf::int64 nw_type() const;
  void set_nw_type(::google::protobuf::int64 value);

  // int64 msg_type = 7;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 7;
  ::google::protobuf::int64 msg_type() const;
  void set_msg_type(::google::protobuf::int64 value);

  // int64 mmei = 8;
  void clear_mmei();
  static const int kMmeiFieldNumber = 8;
  ::google::protobuf::int64 mmei() const;
  void set_mmei(::google::protobuf::int64 value);

  // int32 num = 9;
  void clear_num();
  static const int kNumFieldNumber = 9;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ngcode.AmfAusfRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::int64 imsi_;
  ::google::protobuf::int64 plmn_id_;
  ::google::protobuf::int64 num_autn_vec_;
  ::google::protobuf::int64 nw_type_;
  ::google::protobuf::int64 msg_type_;
  ::google::protobuf::int64 mmei_;
  ::google::protobuf::int32 num_;
  mutable int _cached_size_;
  friend struct ::protobuf_ngcode_2eproto::TableStruct;
  friend void ::protobuf_ngcode_2eproto::InitDefaultsAmfAusfRequestImpl();
};
// -------------------------------------------------------------------

class AmfAusfReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ngcode.AmfAusfReply) */ {
 public:
  AmfAusfReply();
  virtual ~AmfAusfReply();

  AmfAusfReply(const AmfAusfReply& from);

  inline AmfAusfReply& operator=(const AmfAusfReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AmfAusfReply(AmfAusfReply&& from) noexcept
    : AmfAusfReply() {
    *this = ::std::move(from);
  }

  inline AmfAusfReply& operator=(AmfAusfReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AmfAusfReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AmfAusfReply* internal_default_instance() {
    return reinterpret_cast<const AmfAusfReply*>(
               &_AmfAusfReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AmfAusfReply* other);
  friend void swap(AmfAusfReply& a, AmfAusfReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AmfAusfReply* New() const PROTOBUF_FINAL { return New(NULL); }

  AmfAusfReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AmfAusfReply& from);
  void MergeFrom(const AmfAusfReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AmfAusfReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int64 autn_num = 2;
  void clear_autn_num();
  static const int kAutnNumFieldNumber = 2;
  ::google::protobuf::int64 autn_num() const;
  void set_autn_num(::google::protobuf::int64 value);

  // int64 rand_num = 3;
  void clear_rand_num();
  static const int kRandNumFieldNumber = 3;
  ::google::protobuf::int64 rand_num() const;
  void set_rand_num(::google::protobuf::int64 value);

  // int64 xres = 4;
  void clear_xres();
  static const int kXresFieldNumber = 4;
  ::google::protobuf::int64 xres() const;
  void set_xres(::google::protobuf::int64 value);

  // int64 k_asme = 5;
  void clear_k_asme();
  static const int kKAsmeFieldNumber = 5;
  ::google::protobuf::int64 k_asme() const;
  void set_k_asme(::google::protobuf::int64 value);

  // int64 default_apn = 6;
  void clear_default_apn();
  static const int kDefaultApnFieldNumber = 6;
  ::google::protobuf::int64 default_apn() const;
  void set_default_apn(::google::protobuf::int64 value);

  // int64 msg_type = 7;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 7;
  ::google::protobuf::int64 msg_type() const;
  void set_msg_type(::google::protobuf::int64 value);

  // int32 count = 8;
  void clear_count();
  static const int kCountFieldNumber = 8;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ngcode.AmfAusfReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int64 autn_num_;
  ::google::protobuf::int64 rand_num_;
  ::google::protobuf::int64 xres_;
  ::google::protobuf::int64 k_asme_;
  ::google::protobuf::int64 default_apn_;
  ::google::protobuf::int64 msg_type_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend struct ::protobuf_ngcode_2eproto::TableStruct;
  friend void ::protobuf_ngcode_2eproto::InitDefaultsAmfAusfReplyImpl();
};
// -------------------------------------------------------------------

class AmfSmfRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ngcode.AmfSmfRequest) */ {
 public:
  AmfSmfRequest();
  virtual ~AmfSmfRequest();

  AmfSmfRequest(const AmfSmfRequest& from);

  inline AmfSmfRequest& operator=(const AmfSmfRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AmfSmfRequest(AmfSmfRequest&& from) noexcept
    : AmfSmfRequest() {
    *this = ::std::move(from);
  }

  inline AmfSmfRequest& operator=(AmfSmfRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AmfSmfRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AmfSmfRequest* internal_default_instance() {
    return reinterpret_cast<const AmfSmfRequest*>(
               &_AmfSmfRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AmfSmfRequest* other);
  friend void swap(AmfSmfRequest& a, AmfSmfRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AmfSmfRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AmfSmfRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AmfSmfRequest& from);
  void MergeFrom(const AmfSmfRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AmfSmfRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string g_trafmon_ip_addr = 8;
  void clear_g_trafmon_ip_addr();
  static const int kGTrafmonIpAddrFieldNumber = 8;
  const ::std::string& g_trafmon_ip_addr() const;
  void set_g_trafmon_ip_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_g_trafmon_ip_addr(::std::string&& value);
  #endif
  void set_g_trafmon_ip_addr(const char* value);
  void set_g_trafmon_ip_addr(const char* value, size_t size);
  ::std::string* mutable_g_trafmon_ip_addr();
  ::std::string* release_g_trafmon_ip_addr();
  void set_allocated_g_trafmon_ip_addr(::std::string* g_trafmon_ip_addr);

  // int64 guti = 1;
  void clear_guti();
  static const int kGutiFieldNumber = 1;
  ::google::protobuf::int64 guti() const;
  void set_guti(::google::protobuf::int64 value);

  // int64 imsi = 2;
  void clear_imsi();
  static const int kImsiFieldNumber = 2;
  ::google::protobuf::int64 imsi() const;
  void set_imsi(::google::protobuf::int64 value);

  // int64 s11_cteid_amf = 3;
  void clear_s11_cteid_amf();
  static const int kS11CteidAmfFieldNumber = 3;
  ::google::protobuf::int64 s11_cteid_amf() const;
  void set_s11_cteid_amf(::google::protobuf::int64 value);

  // int64 eps_bearer_id = 4;
  void clear_eps_bearer_id();
  static const int kEpsBearerIdFieldNumber = 4;
  ::google::protobuf::int64 eps_bearer_id() const;
  void set_eps_bearer_id(::google::protobuf::int64 value);

  // int64 apn_in_use = 5;
  void clear_apn_in_use();
  static const int kApnInUseFieldNumber = 5;
  ::google::protobuf::int64 apn_in_use() const;
  void set_apn_in_use(::google::protobuf::int64 value);

  // int64 tai = 6;
  void clear_tai();
  static const int kTaiFieldNumber = 6;
  ::google::protobuf::int64 tai() const;
  void set_tai(::google::protobuf::int64 value);

  // int64 g_trafmon_port = 9;
  void clear_g_trafmon_port();
  static const int kGTrafmonPortFieldNumber = 9;
  ::google::protobuf::int64 g_trafmon_port() const;
  void set_g_trafmon_port(::google::protobuf::int64 value);

  // int64 msg_type = 10;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 10;
  ::google::protobuf::int64 msg_type() const;
  void set_msg_type(::google::protobuf::int64 value);

  // int32 s1_uteid_dl = 7;
  void clear_s1_uteid_dl();
  static const int kS1UteidDlFieldNumber = 7;
  ::google::protobuf::int32 s1_uteid_dl() const;
  void set_s1_uteid_dl(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ngcode.AmfSmfRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr g_trafmon_ip_addr_;
  ::google::protobuf::int64 guti_;
  ::google::protobuf::int64 imsi_;
  ::google::protobuf::int64 s11_cteid_amf_;
  ::google::protobuf::int64 eps_bearer_id_;
  ::google::protobuf::int64 apn_in_use_;
  ::google::protobuf::int64 tai_;
  ::google::protobuf::int64 g_trafmon_port_;
  ::google::protobuf::int64 msg_type_;
  ::google::protobuf::int32 s1_uteid_dl_;
  mutable int _cached_size_;
  friend struct ::protobuf_ngcode_2eproto::TableStruct;
  friend void ::protobuf_ngcode_2eproto::InitDefaultsAmfSmfRequestImpl();
};
// -------------------------------------------------------------------

class AmfSmfReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ngcode.AmfSmfReply) */ {
 public:
  AmfSmfReply();
  virtual ~AmfSmfReply();

  AmfSmfReply(const AmfSmfReply& from);

  inline AmfSmfReply& operator=(const AmfSmfReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AmfSmfReply(AmfSmfReply&& from) noexcept
    : AmfSmfReply() {
    *this = ::std::move(from);
  }

  inline AmfSmfReply& operator=(AmfSmfReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AmfSmfReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AmfSmfReply* internal_default_instance() {
    return reinterpret_cast<const AmfSmfReply*>(
               &_AmfSmfReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AmfSmfReply* other);
  friend void swap(AmfSmfReply& a, AmfSmfReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AmfSmfReply* New() const PROTOBUF_FINAL { return New(NULL); }

  AmfSmfReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AmfSmfReply& from);
  void MergeFrom(const AmfSmfReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AmfSmfReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string upf_smf_ip_addr = 16;
  void clear_upf_smf_ip_addr();
  static const int kUpfSmfIpAddrFieldNumber = 16;
  const ::std::string& upf_smf_ip_addr() const;
  void set_upf_smf_ip_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_upf_smf_ip_addr(::std::string&& value);
  #endif
  void set_upf_smf_ip_addr(const char* value);
  void set_upf_smf_ip_addr(const char* value, size_t size);
  ::std::string* mutable_upf_smf_ip_addr();
  ::std::string* release_upf_smf_ip_addr();
  void set_allocated_upf_smf_ip_addr(::std::string* upf_smf_ip_addr);

  // string ue_ip_addr = 18;
  void clear_ue_ip_addr();
  static const int kUeIpAddrFieldNumber = 18;
  const ::std::string& ue_ip_addr() const;
  void set_ue_ip_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_ue_ip_addr(::std::string&& value);
  #endif
  void set_ue_ip_addr(const char* value);
  void set_ue_ip_addr(const char* value, size_t size);
  ::std::string* mutable_ue_ip_addr();
  ::std::string* release_ue_ip_addr();
  void set_allocated_ue_ip_addr(::std::string* ue_ip_addr);

  // string g_upf_s1_ip_addr = 21;
  void clear_g_upf_s1_ip_addr();
  static const int kGUpfS1IpAddrFieldNumber = 21;
  const ::std::string& g_upf_s1_ip_addr() const;
  void set_g_upf_s1_ip_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_g_upf_s1_ip_addr(::std::string&& value);
  #endif
  void set_g_upf_s1_ip_addr(const char* value);
  void set_g_upf_s1_ip_addr(const char* value, size_t size);
  ::std::string* mutable_g_upf_s1_ip_addr();
  ::std::string* release_g_upf_s1_ip_addr();
  void set_allocated_g_upf_s1_ip_addr(::std::string* g_upf_s1_ip_addr);

  // string g_trafmon_ip_addr = 24;
  void clear_g_trafmon_ip_addr();
  static const int kGTrafmonIpAddrFieldNumber = 24;
  const ::std::string& g_trafmon_ip_addr() const;
  void set_g_trafmon_ip_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_g_trafmon_ip_addr(::std::string&& value);
  #endif
  void set_g_trafmon_ip_addr(const char* value);
  void set_g_trafmon_ip_addr(const char* value, size_t size);
  ::std::string* mutable_g_trafmon_ip_addr();
  ::std::string* release_g_trafmon_ip_addr();
  void set_allocated_g_trafmon_ip_addr(::std::string* g_trafmon_ip_addr);

  // int64 xres = 1;
  void clear_xres();
  static const int kXresFieldNumber = 1;
  ::google::protobuf::int64 xres() const;
  void set_xres(::google::protobuf::int64 value);

  // int64 guti = 2;
  void clear_guti();
  static const int kGutiFieldNumber = 2;
  ::google::protobuf::int64 guti() const;
  void set_guti(::google::protobuf::int64 value);

  // int64 imsi = 3;
  void clear_imsi();
  static const int kImsiFieldNumber = 3;
  ::google::protobuf::int64 imsi() const;
  void set_imsi(::google::protobuf::int64 value);

  // int64 apn_in_use = 4;
  void clear_apn_in_use();
  static const int kApnInUseFieldNumber = 4;
  ::google::protobuf::int64 apn_in_use() const;
  void set_apn_in_use(::google::protobuf::int64 value);

  // int64 tai = 5;
  void clear_tai();
  static const int kTaiFieldNumber = 5;
  ::google::protobuf::int64 tai() const;
  void set_tai(::google::protobuf::int64 value);

  // int64 k_enodeb = 6;
  void clear_k_enodeb();
  static const int kKEnodebFieldNumber = 6;
  ::google::protobuf::int64 k_enodeb() const;
  void set_k_enodeb(::google::protobuf::int64 value);

  // int64 k_nas_enc = 7;
  void clear_k_nas_enc();
  static const int kKNasEncFieldNumber = 7;
  ::google::protobuf::int64 k_nas_enc() const;
  void set_k_nas_enc(::google::protobuf::int64 value);

  // int64 k_nas_int = 8;
  void clear_k_nas_int();
  static const int kKNasIntFieldNumber = 8;
  ::google::protobuf::int64 k_nas_int() const;
  void set_k_nas_int(::google::protobuf::int64 value);

  // int64 tau_timer = 9;
  void clear_tau_timer();
  static const int kTauTimerFieldNumber = 9;
  ::google::protobuf::int64 tau_timer() const;
  void set_tau_timer(::google::protobuf::int64 value);

  // int32 s11_cteid_amf = 10;
  void clear_s11_cteid_amf();
  static const int kS11CteidAmfFieldNumber = 10;
  ::google::protobuf::int32 s11_cteid_amf() const;
  void set_s11_cteid_amf(::google::protobuf::int32 value);

  // int32 s11_cteid_upf = 11;
  void clear_s11_cteid_upf();
  static const int kS11CteidUpfFieldNumber = 11;
  ::google::protobuf::int32 s11_cteid_upf() const;
  void set_s11_cteid_upf(::google::protobuf::int32 value);

  // int32 s1_uteid_ul = 12;
  void clear_s1_uteid_ul();
  static const int kS1UteidUlFieldNumber = 12;
  ::google::protobuf::int32 s1_uteid_ul() const;
  void set_s1_uteid_ul(::google::protobuf::int32 value);

  // int32 nw_capability = 13;
  void clear_nw_capability();
  static const int kNwCapabilityFieldNumber = 13;
  ::google::protobuf::int32 nw_capability() const;
  void set_nw_capability(::google::protobuf::int32 value);

  // int32 eps_bearer_id = 14;
  void clear_eps_bearer_id();
  static const int kEpsBearerIdFieldNumber = 14;
  ::google::protobuf::int32 eps_bearer_id() const;
  void set_eps_bearer_id(::google::protobuf::int32 value);

  // int32 e_rab_id = 15;
  void clear_e_rab_id();
  static const int kERabIdFieldNumber = 15;
  ::google::protobuf::int32 e_rab_id() const;
  void set_e_rab_id(::google::protobuf::int32 value);

  // int64 upf_smf_port = 17;
  void clear_upf_smf_port();
  static const int kUpfSmfPortFieldNumber = 17;
  ::google::protobuf::int64 upf_smf_port() const;
  void set_upf_smf_port(::google::protobuf::int64 value);

  // int64 tai_list_size = 19;
  void clear_tai_list_size();
  static const int kTaiListSizeFieldNumber = 19;
  ::google::protobuf::int64 tai_list_size() const;
  void set_tai_list_size(::google::protobuf::int64 value);

  // bool res = 20;
  void clear_res();
  static const int kResFieldNumber = 20;
  bool res() const;
  void set_res(bool value);

  // int32 s1_uteid_dl = 23;
  void clear_s1_uteid_dl();
  static const int kS1UteidDlFieldNumber = 23;
  ::google::protobuf::int32 s1_uteid_dl() const;
  void set_s1_uteid_dl(::google::protobuf::int32 value);

  // int64 g_upf_s1_port = 22;
  void clear_g_upf_s1_port();
  static const int kGUpfS1PortFieldNumber = 22;
  ::google::protobuf::int64 g_upf_s1_port() const;
  void set_g_upf_s1_port(::google::protobuf::int64 value);

  // int64 g_trafmon_port = 25;
  void clear_g_trafmon_port();
  static const int kGTrafmonPortFieldNumber = 25;
  ::google::protobuf::int64 g_trafmon_port() const;
  void set_g_trafmon_port(::google::protobuf::int64 value);

  // int64 msg_type = 26;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 26;
  ::google::protobuf::int64 msg_type() const;
  void set_msg_type(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ngcode.AmfSmfReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr upf_smf_ip_addr_;
  ::google::protobuf::internal::ArenaStringPtr ue_ip_addr_;
  ::google::protobuf::internal::ArenaStringPtr g_upf_s1_ip_addr_;
  ::google::protobuf::internal::ArenaStringPtr g_trafmon_ip_addr_;
  ::google::protobuf::int64 xres_;
  ::google::protobuf::int64 guti_;
  ::google::protobuf::int64 imsi_;
  ::google::protobuf::int64 apn_in_use_;
  ::google::protobuf::int64 tai_;
  ::google::protobuf::int64 k_enodeb_;
  ::google::protobuf::int64 k_nas_enc_;
  ::google::protobuf::int64 k_nas_int_;
  ::google::protobuf::int64 tau_timer_;
  ::google::protobuf::int32 s11_cteid_amf_;
  ::google::protobuf::int32 s11_cteid_upf_;
  ::google::protobuf::int32 s1_uteid_ul_;
  ::google::protobuf::int32 nw_capability_;
  ::google::protobuf::int32 eps_bearer_id_;
  ::google::protobuf::int32 e_rab_id_;
  ::google::protobuf::int64 upf_smf_port_;
  ::google::protobuf::int64 tai_list_size_;
  bool res_;
  ::google::protobuf::int32 s1_uteid_dl_;
  ::google::protobuf::int64 g_upf_s1_port_;
  ::google::protobuf::int64 g_trafmon_port_;
  ::google::protobuf::int64 msg_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_ngcode_2eproto::TableStruct;
  friend void ::protobuf_ngcode_2eproto::InitDefaultsAmfSmfReplyImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AmfAusfRequest

// string name = 1;
inline void AmfAusfRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AmfAusfRequest::name() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfRequest.name)
  return name_.GetNoArena();
}
inline void AmfAusfRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfRequest.name)
}
#if LANG_CXX11
inline void AmfAusfRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ngcode.AmfAusfRequest.name)
}
#endif
inline void AmfAusfRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ngcode.AmfAusfRequest.name)
}
inline void AmfAusfRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ngcode.AmfAusfRequest.name)
}
inline ::std::string* AmfAusfRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ngcode.AmfAusfRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AmfAusfRequest::release_name() {
  // @@protoc_insertion_point(field_release:ngcode.AmfAusfRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AmfAusfRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ngcode.AmfAusfRequest.name)
}

// string type = 2;
inline void AmfAusfRequest::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AmfAusfRequest::type() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfRequest.type)
  return type_.GetNoArena();
}
inline void AmfAusfRequest::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfRequest.type)
}
#if LANG_CXX11
inline void AmfAusfRequest::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ngcode.AmfAusfRequest.type)
}
#endif
inline void AmfAusfRequest::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ngcode.AmfAusfRequest.type)
}
inline void AmfAusfRequest::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ngcode.AmfAusfRequest.type)
}
inline ::std::string* AmfAusfRequest::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ngcode.AmfAusfRequest.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AmfAusfRequest::release_type() {
  // @@protoc_insertion_point(field_release:ngcode.AmfAusfRequest.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AmfAusfRequest::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ngcode.AmfAusfRequest.type)
}

// int64 imsi = 3;
inline void AmfAusfRequest::clear_imsi() {
  imsi_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfAusfRequest::imsi() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfRequest.imsi)
  return imsi_;
}
inline void AmfAusfRequest::set_imsi(::google::protobuf::int64 value) {
  
  imsi_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfRequest.imsi)
}

// int64 plmn_id = 4;
inline void AmfAusfRequest::clear_plmn_id() {
  plmn_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfAusfRequest::plmn_id() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfRequest.plmn_id)
  return plmn_id_;
}
inline void AmfAusfRequest::set_plmn_id(::google::protobuf::int64 value) {
  
  plmn_id_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfRequest.plmn_id)
}

// int64 num_autn_vec = 5;
inline void AmfAusfRequest::clear_num_autn_vec() {
  num_autn_vec_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfAusfRequest::num_autn_vec() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfRequest.num_autn_vec)
  return num_autn_vec_;
}
inline void AmfAusfRequest::set_num_autn_vec(::google::protobuf::int64 value) {
  
  num_autn_vec_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfRequest.num_autn_vec)
}

// int64 nw_type = 6;
inline void AmfAusfRequest::clear_nw_type() {
  nw_type_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfAusfRequest::nw_type() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfRequest.nw_type)
  return nw_type_;
}
inline void AmfAusfRequest::set_nw_type(::google::protobuf::int64 value) {
  
  nw_type_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfRequest.nw_type)
}

// int64 msg_type = 7;
inline void AmfAusfRequest::clear_msg_type() {
  msg_type_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfAusfRequest::msg_type() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfRequest.msg_type)
  return msg_type_;
}
inline void AmfAusfRequest::set_msg_type(::google::protobuf::int64 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfRequest.msg_type)
}

// int64 mmei = 8;
inline void AmfAusfRequest::clear_mmei() {
  mmei_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfAusfRequest::mmei() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfRequest.mmei)
  return mmei_;
}
inline void AmfAusfRequest::set_mmei(::google::protobuf::int64 value) {
  
  mmei_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfRequest.mmei)
}

// int32 num = 9;
inline void AmfAusfRequest::clear_num() {
  num_ = 0;
}
inline ::google::protobuf::int32 AmfAusfRequest::num() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfRequest.num)
  return num_;
}
inline void AmfAusfRequest::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfRequest.num)
}

// -------------------------------------------------------------------

// AmfAusfReply

// string message = 1;
inline void AmfAusfReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AmfAusfReply::message() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfReply.message)
  return message_.GetNoArena();
}
inline void AmfAusfReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfReply.message)
}
#if LANG_CXX11
inline void AmfAusfReply::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ngcode.AmfAusfReply.message)
}
#endif
inline void AmfAusfReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ngcode.AmfAusfReply.message)
}
inline void AmfAusfReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ngcode.AmfAusfReply.message)
}
inline ::std::string* AmfAusfReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:ngcode.AmfAusfReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AmfAusfReply::release_message() {
  // @@protoc_insertion_point(field_release:ngcode.AmfAusfReply.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AmfAusfReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ngcode.AmfAusfReply.message)
}

// int64 autn_num = 2;
inline void AmfAusfReply::clear_autn_num() {
  autn_num_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfAusfReply::autn_num() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfReply.autn_num)
  return autn_num_;
}
inline void AmfAusfReply::set_autn_num(::google::protobuf::int64 value) {
  
  autn_num_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfReply.autn_num)
}

// int64 rand_num = 3;
inline void AmfAusfReply::clear_rand_num() {
  rand_num_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfAusfReply::rand_num() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfReply.rand_num)
  return rand_num_;
}
inline void AmfAusfReply::set_rand_num(::google::protobuf::int64 value) {
  
  rand_num_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfReply.rand_num)
}

// int64 xres = 4;
inline void AmfAusfReply::clear_xres() {
  xres_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfAusfReply::xres() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfReply.xres)
  return xres_;
}
inline void AmfAusfReply::set_xres(::google::protobuf::int64 value) {
  
  xres_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfReply.xres)
}

// int64 k_asme = 5;
inline void AmfAusfReply::clear_k_asme() {
  k_asme_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfAusfReply::k_asme() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfReply.k_asme)
  return k_asme_;
}
inline void AmfAusfReply::set_k_asme(::google::protobuf::int64 value) {
  
  k_asme_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfReply.k_asme)
}

// int64 default_apn = 6;
inline void AmfAusfReply::clear_default_apn() {
  default_apn_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfAusfReply::default_apn() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfReply.default_apn)
  return default_apn_;
}
inline void AmfAusfReply::set_default_apn(::google::protobuf::int64 value) {
  
  default_apn_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfReply.default_apn)
}

// int64 msg_type = 7;
inline void AmfAusfReply::clear_msg_type() {
  msg_type_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfAusfReply::msg_type() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfReply.msg_type)
  return msg_type_;
}
inline void AmfAusfReply::set_msg_type(::google::protobuf::int64 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfReply.msg_type)
}

// int32 count = 8;
inline void AmfAusfReply::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 AmfAusfReply::count() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfAusfReply.count)
  return count_;
}
inline void AmfAusfReply::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfAusfReply.count)
}

// -------------------------------------------------------------------

// AmfSmfRequest

// int64 guti = 1;
inline void AmfSmfRequest::clear_guti() {
  guti_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfRequest::guti() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfRequest.guti)
  return guti_;
}
inline void AmfSmfRequest::set_guti(::google::protobuf::int64 value) {
  
  guti_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfRequest.guti)
}

// int64 imsi = 2;
inline void AmfSmfRequest::clear_imsi() {
  imsi_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfRequest::imsi() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfRequest.imsi)
  return imsi_;
}
inline void AmfSmfRequest::set_imsi(::google::protobuf::int64 value) {
  
  imsi_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfRequest.imsi)
}

// int64 s11_cteid_amf = 3;
inline void AmfSmfRequest::clear_s11_cteid_amf() {
  s11_cteid_amf_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfRequest::s11_cteid_amf() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfRequest.s11_cteid_amf)
  return s11_cteid_amf_;
}
inline void AmfSmfRequest::set_s11_cteid_amf(::google::protobuf::int64 value) {
  
  s11_cteid_amf_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfRequest.s11_cteid_amf)
}

// int64 eps_bearer_id = 4;
inline void AmfSmfRequest::clear_eps_bearer_id() {
  eps_bearer_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfRequest::eps_bearer_id() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfRequest.eps_bearer_id)
  return eps_bearer_id_;
}
inline void AmfSmfRequest::set_eps_bearer_id(::google::protobuf::int64 value) {
  
  eps_bearer_id_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfRequest.eps_bearer_id)
}

// int64 apn_in_use = 5;
inline void AmfSmfRequest::clear_apn_in_use() {
  apn_in_use_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfRequest::apn_in_use() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfRequest.apn_in_use)
  return apn_in_use_;
}
inline void AmfSmfRequest::set_apn_in_use(::google::protobuf::int64 value) {
  
  apn_in_use_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfRequest.apn_in_use)
}

// int64 tai = 6;
inline void AmfSmfRequest::clear_tai() {
  tai_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfRequest::tai() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfRequest.tai)
  return tai_;
}
inline void AmfSmfRequest::set_tai(::google::protobuf::int64 value) {
  
  tai_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfRequest.tai)
}

// int32 s1_uteid_dl = 7;
inline void AmfSmfRequest::clear_s1_uteid_dl() {
  s1_uteid_dl_ = 0;
}
inline ::google::protobuf::int32 AmfSmfRequest::s1_uteid_dl() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfRequest.s1_uteid_dl)
  return s1_uteid_dl_;
}
inline void AmfSmfRequest::set_s1_uteid_dl(::google::protobuf::int32 value) {
  
  s1_uteid_dl_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfRequest.s1_uteid_dl)
}

// string g_trafmon_ip_addr = 8;
inline void AmfSmfRequest::clear_g_trafmon_ip_addr() {
  g_trafmon_ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AmfSmfRequest::g_trafmon_ip_addr() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfRequest.g_trafmon_ip_addr)
  return g_trafmon_ip_addr_.GetNoArena();
}
inline void AmfSmfRequest::set_g_trafmon_ip_addr(const ::std::string& value) {
  
  g_trafmon_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfRequest.g_trafmon_ip_addr)
}
#if LANG_CXX11
inline void AmfSmfRequest::set_g_trafmon_ip_addr(::std::string&& value) {
  
  g_trafmon_ip_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ngcode.AmfSmfRequest.g_trafmon_ip_addr)
}
#endif
inline void AmfSmfRequest::set_g_trafmon_ip_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_trafmon_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ngcode.AmfSmfRequest.g_trafmon_ip_addr)
}
inline void AmfSmfRequest::set_g_trafmon_ip_addr(const char* value, size_t size) {
  
  g_trafmon_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ngcode.AmfSmfRequest.g_trafmon_ip_addr)
}
inline ::std::string* AmfSmfRequest::mutable_g_trafmon_ip_addr() {
  
  // @@protoc_insertion_point(field_mutable:ngcode.AmfSmfRequest.g_trafmon_ip_addr)
  return g_trafmon_ip_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AmfSmfRequest::release_g_trafmon_ip_addr() {
  // @@protoc_insertion_point(field_release:ngcode.AmfSmfRequest.g_trafmon_ip_addr)
  
  return g_trafmon_ip_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AmfSmfRequest::set_allocated_g_trafmon_ip_addr(::std::string* g_trafmon_ip_addr) {
  if (g_trafmon_ip_addr != NULL) {
    
  } else {
    
  }
  g_trafmon_ip_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_trafmon_ip_addr);
  // @@protoc_insertion_point(field_set_allocated:ngcode.AmfSmfRequest.g_trafmon_ip_addr)
}

// int64 g_trafmon_port = 9;
inline void AmfSmfRequest::clear_g_trafmon_port() {
  g_trafmon_port_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfRequest::g_trafmon_port() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfRequest.g_trafmon_port)
  return g_trafmon_port_;
}
inline void AmfSmfRequest::set_g_trafmon_port(::google::protobuf::int64 value) {
  
  g_trafmon_port_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfRequest.g_trafmon_port)
}

// int64 msg_type = 10;
inline void AmfSmfRequest::clear_msg_type() {
  msg_type_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfRequest::msg_type() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfRequest.msg_type)
  return msg_type_;
}
inline void AmfSmfRequest::set_msg_type(::google::protobuf::int64 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfRequest.msg_type)
}

// -------------------------------------------------------------------

// AmfSmfReply

// int64 xres = 1;
inline void AmfSmfReply::clear_xres() {
  xres_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfReply::xres() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.xres)
  return xres_;
}
inline void AmfSmfReply::set_xres(::google::protobuf::int64 value) {
  
  xres_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.xres)
}

// int64 guti = 2;
inline void AmfSmfReply::clear_guti() {
  guti_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfReply::guti() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.guti)
  return guti_;
}
inline void AmfSmfReply::set_guti(::google::protobuf::int64 value) {
  
  guti_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.guti)
}

// int64 imsi = 3;
inline void AmfSmfReply::clear_imsi() {
  imsi_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfReply::imsi() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.imsi)
  return imsi_;
}
inline void AmfSmfReply::set_imsi(::google::protobuf::int64 value) {
  
  imsi_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.imsi)
}

// int64 apn_in_use = 4;
inline void AmfSmfReply::clear_apn_in_use() {
  apn_in_use_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfReply::apn_in_use() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.apn_in_use)
  return apn_in_use_;
}
inline void AmfSmfReply::set_apn_in_use(::google::protobuf::int64 value) {
  
  apn_in_use_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.apn_in_use)
}

// int64 tai = 5;
inline void AmfSmfReply::clear_tai() {
  tai_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfReply::tai() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.tai)
  return tai_;
}
inline void AmfSmfReply::set_tai(::google::protobuf::int64 value) {
  
  tai_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.tai)
}

// int64 k_enodeb = 6;
inline void AmfSmfReply::clear_k_enodeb() {
  k_enodeb_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfReply::k_enodeb() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.k_enodeb)
  return k_enodeb_;
}
inline void AmfSmfReply::set_k_enodeb(::google::protobuf::int64 value) {
  
  k_enodeb_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.k_enodeb)
}

// int64 k_nas_enc = 7;
inline void AmfSmfReply::clear_k_nas_enc() {
  k_nas_enc_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfReply::k_nas_enc() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.k_nas_enc)
  return k_nas_enc_;
}
inline void AmfSmfReply::set_k_nas_enc(::google::protobuf::int64 value) {
  
  k_nas_enc_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.k_nas_enc)
}

// int64 k_nas_int = 8;
inline void AmfSmfReply::clear_k_nas_int() {
  k_nas_int_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfReply::k_nas_int() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.k_nas_int)
  return k_nas_int_;
}
inline void AmfSmfReply::set_k_nas_int(::google::protobuf::int64 value) {
  
  k_nas_int_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.k_nas_int)
}

// int64 tau_timer = 9;
inline void AmfSmfReply::clear_tau_timer() {
  tau_timer_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfReply::tau_timer() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.tau_timer)
  return tau_timer_;
}
inline void AmfSmfReply::set_tau_timer(::google::protobuf::int64 value) {
  
  tau_timer_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.tau_timer)
}

// int32 s11_cteid_amf = 10;
inline void AmfSmfReply::clear_s11_cteid_amf() {
  s11_cteid_amf_ = 0;
}
inline ::google::protobuf::int32 AmfSmfReply::s11_cteid_amf() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.s11_cteid_amf)
  return s11_cteid_amf_;
}
inline void AmfSmfReply::set_s11_cteid_amf(::google::protobuf::int32 value) {
  
  s11_cteid_amf_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.s11_cteid_amf)
}

// int32 s11_cteid_upf = 11;
inline void AmfSmfReply::clear_s11_cteid_upf() {
  s11_cteid_upf_ = 0;
}
inline ::google::protobuf::int32 AmfSmfReply::s11_cteid_upf() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.s11_cteid_upf)
  return s11_cteid_upf_;
}
inline void AmfSmfReply::set_s11_cteid_upf(::google::protobuf::int32 value) {
  
  s11_cteid_upf_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.s11_cteid_upf)
}

// int32 s1_uteid_ul = 12;
inline void AmfSmfReply::clear_s1_uteid_ul() {
  s1_uteid_ul_ = 0;
}
inline ::google::protobuf::int32 AmfSmfReply::s1_uteid_ul() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.s1_uteid_ul)
  return s1_uteid_ul_;
}
inline void AmfSmfReply::set_s1_uteid_ul(::google::protobuf::int32 value) {
  
  s1_uteid_ul_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.s1_uteid_ul)
}

// int32 nw_capability = 13;
inline void AmfSmfReply::clear_nw_capability() {
  nw_capability_ = 0;
}
inline ::google::protobuf::int32 AmfSmfReply::nw_capability() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.nw_capability)
  return nw_capability_;
}
inline void AmfSmfReply::set_nw_capability(::google::protobuf::int32 value) {
  
  nw_capability_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.nw_capability)
}

// int32 eps_bearer_id = 14;
inline void AmfSmfReply::clear_eps_bearer_id() {
  eps_bearer_id_ = 0;
}
inline ::google::protobuf::int32 AmfSmfReply::eps_bearer_id() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.eps_bearer_id)
  return eps_bearer_id_;
}
inline void AmfSmfReply::set_eps_bearer_id(::google::protobuf::int32 value) {
  
  eps_bearer_id_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.eps_bearer_id)
}

// int32 e_rab_id = 15;
inline void AmfSmfReply::clear_e_rab_id() {
  e_rab_id_ = 0;
}
inline ::google::protobuf::int32 AmfSmfReply::e_rab_id() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.e_rab_id)
  return e_rab_id_;
}
inline void AmfSmfReply::set_e_rab_id(::google::protobuf::int32 value) {
  
  e_rab_id_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.e_rab_id)
}

// string upf_smf_ip_addr = 16;
inline void AmfSmfReply::clear_upf_smf_ip_addr() {
  upf_smf_ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AmfSmfReply::upf_smf_ip_addr() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.upf_smf_ip_addr)
  return upf_smf_ip_addr_.GetNoArena();
}
inline void AmfSmfReply::set_upf_smf_ip_addr(const ::std::string& value) {
  
  upf_smf_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.upf_smf_ip_addr)
}
#if LANG_CXX11
inline void AmfSmfReply::set_upf_smf_ip_addr(::std::string&& value) {
  
  upf_smf_ip_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ngcode.AmfSmfReply.upf_smf_ip_addr)
}
#endif
inline void AmfSmfReply::set_upf_smf_ip_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  upf_smf_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ngcode.AmfSmfReply.upf_smf_ip_addr)
}
inline void AmfSmfReply::set_upf_smf_ip_addr(const char* value, size_t size) {
  
  upf_smf_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ngcode.AmfSmfReply.upf_smf_ip_addr)
}
inline ::std::string* AmfSmfReply::mutable_upf_smf_ip_addr() {
  
  // @@protoc_insertion_point(field_mutable:ngcode.AmfSmfReply.upf_smf_ip_addr)
  return upf_smf_ip_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AmfSmfReply::release_upf_smf_ip_addr() {
  // @@protoc_insertion_point(field_release:ngcode.AmfSmfReply.upf_smf_ip_addr)
  
  return upf_smf_ip_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AmfSmfReply::set_allocated_upf_smf_ip_addr(::std::string* upf_smf_ip_addr) {
  if (upf_smf_ip_addr != NULL) {
    
  } else {
    
  }
  upf_smf_ip_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), upf_smf_ip_addr);
  // @@protoc_insertion_point(field_set_allocated:ngcode.AmfSmfReply.upf_smf_ip_addr)
}

// int64 upf_smf_port = 17;
inline void AmfSmfReply::clear_upf_smf_port() {
  upf_smf_port_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfReply::upf_smf_port() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.upf_smf_port)
  return upf_smf_port_;
}
inline void AmfSmfReply::set_upf_smf_port(::google::protobuf::int64 value) {
  
  upf_smf_port_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.upf_smf_port)
}

// string ue_ip_addr = 18;
inline void AmfSmfReply::clear_ue_ip_addr() {
  ue_ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AmfSmfReply::ue_ip_addr() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.ue_ip_addr)
  return ue_ip_addr_.GetNoArena();
}
inline void AmfSmfReply::set_ue_ip_addr(const ::std::string& value) {
  
  ue_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.ue_ip_addr)
}
#if LANG_CXX11
inline void AmfSmfReply::set_ue_ip_addr(::std::string&& value) {
  
  ue_ip_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ngcode.AmfSmfReply.ue_ip_addr)
}
#endif
inline void AmfSmfReply::set_ue_ip_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ue_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ngcode.AmfSmfReply.ue_ip_addr)
}
inline void AmfSmfReply::set_ue_ip_addr(const char* value, size_t size) {
  
  ue_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ngcode.AmfSmfReply.ue_ip_addr)
}
inline ::std::string* AmfSmfReply::mutable_ue_ip_addr() {
  
  // @@protoc_insertion_point(field_mutable:ngcode.AmfSmfReply.ue_ip_addr)
  return ue_ip_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AmfSmfReply::release_ue_ip_addr() {
  // @@protoc_insertion_point(field_release:ngcode.AmfSmfReply.ue_ip_addr)
  
  return ue_ip_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AmfSmfReply::set_allocated_ue_ip_addr(::std::string* ue_ip_addr) {
  if (ue_ip_addr != NULL) {
    
  } else {
    
  }
  ue_ip_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ue_ip_addr);
  // @@protoc_insertion_point(field_set_allocated:ngcode.AmfSmfReply.ue_ip_addr)
}

// int64 tai_list_size = 19;
inline void AmfSmfReply::clear_tai_list_size() {
  tai_list_size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfReply::tai_list_size() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.tai_list_size)
  return tai_list_size_;
}
inline void AmfSmfReply::set_tai_list_size(::google::protobuf::int64 value) {
  
  tai_list_size_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.tai_list_size)
}

// bool res = 20;
inline void AmfSmfReply::clear_res() {
  res_ = false;
}
inline bool AmfSmfReply::res() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.res)
  return res_;
}
inline void AmfSmfReply::set_res(bool value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.res)
}

// string g_upf_s1_ip_addr = 21;
inline void AmfSmfReply::clear_g_upf_s1_ip_addr() {
  g_upf_s1_ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AmfSmfReply::g_upf_s1_ip_addr() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.g_upf_s1_ip_addr)
  return g_upf_s1_ip_addr_.GetNoArena();
}
inline void AmfSmfReply::set_g_upf_s1_ip_addr(const ::std::string& value) {
  
  g_upf_s1_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.g_upf_s1_ip_addr)
}
#if LANG_CXX11
inline void AmfSmfReply::set_g_upf_s1_ip_addr(::std::string&& value) {
  
  g_upf_s1_ip_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ngcode.AmfSmfReply.g_upf_s1_ip_addr)
}
#endif
inline void AmfSmfReply::set_g_upf_s1_ip_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_upf_s1_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ngcode.AmfSmfReply.g_upf_s1_ip_addr)
}
inline void AmfSmfReply::set_g_upf_s1_ip_addr(const char* value, size_t size) {
  
  g_upf_s1_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ngcode.AmfSmfReply.g_upf_s1_ip_addr)
}
inline ::std::string* AmfSmfReply::mutable_g_upf_s1_ip_addr() {
  
  // @@protoc_insertion_point(field_mutable:ngcode.AmfSmfReply.g_upf_s1_ip_addr)
  return g_upf_s1_ip_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AmfSmfReply::release_g_upf_s1_ip_addr() {
  // @@protoc_insertion_point(field_release:ngcode.AmfSmfReply.g_upf_s1_ip_addr)
  
  return g_upf_s1_ip_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AmfSmfReply::set_allocated_g_upf_s1_ip_addr(::std::string* g_upf_s1_ip_addr) {
  if (g_upf_s1_ip_addr != NULL) {
    
  } else {
    
  }
  g_upf_s1_ip_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_upf_s1_ip_addr);
  // @@protoc_insertion_point(field_set_allocated:ngcode.AmfSmfReply.g_upf_s1_ip_addr)
}

// int64 g_upf_s1_port = 22;
inline void AmfSmfReply::clear_g_upf_s1_port() {
  g_upf_s1_port_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfReply::g_upf_s1_port() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.g_upf_s1_port)
  return g_upf_s1_port_;
}
inline void AmfSmfReply::set_g_upf_s1_port(::google::protobuf::int64 value) {
  
  g_upf_s1_port_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.g_upf_s1_port)
}

// int32 s1_uteid_dl = 23;
inline void AmfSmfReply::clear_s1_uteid_dl() {
  s1_uteid_dl_ = 0;
}
inline ::google::protobuf::int32 AmfSmfReply::s1_uteid_dl() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.s1_uteid_dl)
  return s1_uteid_dl_;
}
inline void AmfSmfReply::set_s1_uteid_dl(::google::protobuf::int32 value) {
  
  s1_uteid_dl_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.s1_uteid_dl)
}

// string g_trafmon_ip_addr = 24;
inline void AmfSmfReply::clear_g_trafmon_ip_addr() {
  g_trafmon_ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AmfSmfReply::g_trafmon_ip_addr() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.g_trafmon_ip_addr)
  return g_trafmon_ip_addr_.GetNoArena();
}
inline void AmfSmfReply::set_g_trafmon_ip_addr(const ::std::string& value) {
  
  g_trafmon_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.g_trafmon_ip_addr)
}
#if LANG_CXX11
inline void AmfSmfReply::set_g_trafmon_ip_addr(::std::string&& value) {
  
  g_trafmon_ip_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ngcode.AmfSmfReply.g_trafmon_ip_addr)
}
#endif
inline void AmfSmfReply::set_g_trafmon_ip_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_trafmon_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ngcode.AmfSmfReply.g_trafmon_ip_addr)
}
inline void AmfSmfReply::set_g_trafmon_ip_addr(const char* value, size_t size) {
  
  g_trafmon_ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ngcode.AmfSmfReply.g_trafmon_ip_addr)
}
inline ::std::string* AmfSmfReply::mutable_g_trafmon_ip_addr() {
  
  // @@protoc_insertion_point(field_mutable:ngcode.AmfSmfReply.g_trafmon_ip_addr)
  return g_trafmon_ip_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AmfSmfReply::release_g_trafmon_ip_addr() {
  // @@protoc_insertion_point(field_release:ngcode.AmfSmfReply.g_trafmon_ip_addr)
  
  return g_trafmon_ip_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AmfSmfReply::set_allocated_g_trafmon_ip_addr(::std::string* g_trafmon_ip_addr) {
  if (g_trafmon_ip_addr != NULL) {
    
  } else {
    
  }
  g_trafmon_ip_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_trafmon_ip_addr);
  // @@protoc_insertion_point(field_set_allocated:ngcode.AmfSmfReply.g_trafmon_ip_addr)
}

// int64 g_trafmon_port = 25;
inline void AmfSmfReply::clear_g_trafmon_port() {
  g_trafmon_port_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfReply::g_trafmon_port() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.g_trafmon_port)
  return g_trafmon_port_;
}
inline void AmfSmfReply::set_g_trafmon_port(::google::protobuf::int64 value) {
  
  g_trafmon_port_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.g_trafmon_port)
}

// int64 msg_type = 26;
inline void AmfSmfReply::clear_msg_type() {
  msg_type_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AmfSmfReply::msg_type() const {
  // @@protoc_insertion_point(field_get:ngcode.AmfSmfReply.msg_type)
  return msg_type_;
}
inline void AmfSmfReply::set_msg_type(::google::protobuf::int64 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:ngcode.AmfSmfReply.msg_type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ngcode

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ngcode_2eproto__INCLUDED
